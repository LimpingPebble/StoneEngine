name: Generate documentation

on:
  push:
    branches: [ "dev" ]

permissions:
  contents: read
  id-token: write
  pages: write

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Documentation

  DOXYGEN_VERSION: "1.10.0"
  GRAPHVIZ_VERSION: '2.42.2-3build2'
  DEPS_PATH: ~/deps

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - name: Setup GitHub Actions
        uses: actions/checkout@v3

      #      - name: Setup Doxygen cache
      #        uses: actions/cache@v4
      #        id: doxygen-cache
      #        with:
      #          path: ~/deps/**
      #          key: doxygen-${{env.DOXYGEN_VERSION}}

      - name: Setup Doxygen
        uses: ssciwr/doxygen-install@v1
      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v2
      - name: Install Cmake (local runs only)
        if: ${{ env.ACT }}
        run: sudo apt install -y cmake

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake --preset doxygen

      - name: Generate Documentation
        # Build the program with the given configuration
        run: cmake --build --preset generate-doxygen

      - name: Upload documentation artifacts
        uses: actions/upload-pages-artifact@v3
        if: ${{ !env.ACT }}
        with:
          name: Docs
          path: ${{github.workspace}}/build/doxygen/docs/html
          retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ !github.event.act }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: Docs

#      - name: Check installed documentation
#        run: (ls -lA ${{github.workspace}}/build && ls -lA ${{github.workspace}}/build/doxygen && ls -lA ${{github.workspace}}/build/doxygen/out && ls -lA ${{github.workspace}}/build/doxygen/out/html) || exit 0
#
#      - name: Check where are deps
#        run: |
#          which dot
#          which doxygen
#
#          dot -V
#          doxygen --version
